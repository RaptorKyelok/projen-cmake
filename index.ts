/**
 * projen-cmake
 * 
 * Author: Kyelok
 * 
 * Projen's auto-discover feature doesn't seem to work if this file isn't named index.ts
 */

import { Project, ProjectOptions, TextFile } from "projen";

class CMakeFileFragment {
    dependsOn: CMakeFileFragment[]
    prefixLines: string[]
    postfixLines: string[]
}

class CMakeTarget extends CMakeFileFragment {
    name: string
    declaration_number: number
    target_libraries: CMakeLibrary[]
}

class CMakeExecutable extends CMakeTarget {
    files: string[]
}

class CMakeLibrary extends CMakeTarget {
    files: string[]
}

class CMakePackage {
    static findPackage(): CMakePackage | undefined {
        throw "not implemented"
    }
}

export interface CMakeProjectOptions extends ProjectOptions {
    readonly cmakeMinVersion?: number
}

export class CMakeProject extends Project {
    private _cmakefile: TextFile

    private _executables: CMakeExecutable[]
    private _libraries: CMakeLibrary[]
    private _packages: CMakePackage[]

    private _declaration_counter: number = 1

    private _default_cmakeMinVersion: number = 3.5

    constructor(options: CMakeProjectOptions) {
        super(options)

        
        this.defaultTask?.exec("ts-node .projenrc.ts")

        this._cmakefile = new TextFile(this, "./CMakeLists.txt", { marker: false, readonly: true })
        this._cmakefile.addLine("# ~~ This file was auto-generated by Projen.")
        this._cmakefile.addLine("# ~~ To make changes, please edit .projenrc.ts and run `npx projen` to rebuild.")
        this._cmakefile.addLine("")
        this._cmakefile.addLine(`cmake_minimum_required(VERSION ${options.cmakeMinVersion ?? this._default_cmakeMinVersion})`)
    }
    
    declareExecutable(name: string): CMakeExecutable {
        throw "not implemented"
    }

    declareLibrary(name: string): CMakeExecutable {
        throw "not implemented"
    }
    
    findPackage(package_name: string): CMakePackage {
        throw "not implemented"
    }
}
